# Prometheus Configuration v2.45.0
# Global configuration settings
global:
  scrape_interval: 15s     # How frequently to scrape targets
  evaluation_interval: 15s # How frequently to evaluate rules
  scrape_timeout: 10s     # How long until a scrape request times out
  external_labels:
    environment: production
    region: global

# Rule files specifies a list of files from which rules are read
rule_files:
  - /etc/prometheus/rules/*.yml

# Alerting specifies settings related to the AlertManager
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations containing endpoints to scrape
scrape_configs:
  # API Gateway monitoring
  - job_name: api-gateway
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - default
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: api-gateway
        action: keep

  # Prompt Service monitoring
  - job_name: prompt-service
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - default
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: prompt-service
        action: keep

  # Analytics Service monitoring
  - job_name: analytics-service
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - default
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: analytics-service
        action: keep

  # Collaboration Service monitoring
  - job_name: collaboration-service
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - default
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: collaboration-service
        action: keep

  # Node monitoring
  - job_name: node
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes API server monitoring
  - job_name: kubernetes-apiservers
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes cadvisor monitoring
  - job_name: kubernetes-cadvisor
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor