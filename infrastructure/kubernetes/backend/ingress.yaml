apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: prompts-portal
  labels:
    app: prompts-portal
    component: backend
    managed-by: terraform
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: "nginx"
    
    # TLS/Security configurations
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.3"
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
    
    # Certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-rpm: "1000"
    
    # Load balancing
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"

spec:
  tls:
    - hosts:
        - api.prompts-portal.com
      secretName: prompts-portal-tls
  
  rules:
    - host: api.prompts-portal.com
      http:
        paths:
          # Main API endpoints
          - path: /api/v1
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 3000
          
          # Analytics endpoints
          - path: /analytics
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 3001
          
          # WebSocket endpoints
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 3002