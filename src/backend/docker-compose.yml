version: '3.8'

services:
  # API Gateway Service
  api-gateway:
    build:
      context: .
      target: development
      args:
        NODE_VERSION: '20'
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - DB_HOST=database
      - DB_PORT=8081
      - COSMOS_DB_NAME=prompts-portal
      - COSMOS_DB_PRIMARY_REGION=local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    depends_on:
      - cache
      - database
    networks:
      - backend

  # Analytics Service
  analytics-service:
    build:
      context: .
      target: development
      args:
        NODE_VERSION: '20'
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - DB_HOST=database
      - DB_PORT=8081
      - COSMOS_DB_NAME=prompts-portal
      - COSMOS_DB_PRIMARY_REGION=local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    restart: unless-stopped
    depends_on:
      - cache
      - database
    networks:
      - backend

  # Collaboration Service
  collaboration-service:
    build:
      context: .
      target: development
      args:
        NODE_VERSION: '20'
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - DB_HOST=database
      - DB_PORT=8081
      - COSMOS_DB_NAME=prompts-portal
      - COSMOS_DB_PRIMARY_REGION=local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    depends_on:
      - cache
      - database
    networks:
      - backend

  # Prompt Service
  prompt-service:
    build:
      context: .
      target: development
      args:
        NODE_VERSION: '20'
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - DB_HOST=database
      - DB_PORT=8081
      - COSMOS_DB_NAME=prompts-portal
      - COSMOS_DB_PRIMARY_REGION=local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    depends_on:
      - cache
      - database
    networks:
      - backend

  # Redis Cache
  cache:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    restart: unless-stopped
    networks:
      - backend

  # Cosmos DB Emulator
  database:
    image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
    ports:
      - "8081:8081"
    environment:
      - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=10
      - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
      - AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE=0.0.0.0
    volumes:
      - cosmosdb_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8081/_explorer/emulator.pem"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    restart: unless-stopped
    networks:
      - backend

volumes:
  redis_data:
    driver: local
  cosmosdb_data:
    driver: local

networks:
  backend:
    driver: bridge
    internal: true
    attachable: true
    enable_ipv6: false
    driver_opts:
      encrypted: "true"