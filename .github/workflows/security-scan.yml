name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan on Sundays

env:
  SEVERITY_THRESHOLD: medium
  NODE_VERSION: 20

jobs:
  codeql-analysis:
    name: CodeQL Static Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          queries: security-extended,security-and-quality
          config-file: ./.github/codeql/codeql-config.yml

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"
          upload: true
          output: sarif-results

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sarif-results

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    needs: codeql-analysis

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Snyk
        uses: snyk/actions/setup@v1
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Backend Dependencies Scan
        working-directory: ./src/backend
        run: |
          npm ci
          snyk test --severity-threshold=${{ env.SEVERITY_THRESHOLD }} --all-projects
          snyk monitor --all-projects

      - name: Frontend Dependencies Scan
        working-directory: ./src/web
        run: |
          npm ci
          snyk test --severity-threshold=${{ env.SEVERITY_THRESHOLD }} --all-projects
          snyk monitor --all-projects

      - name: Generate Dependency Graph
        uses: snyk/actions/node@v1
        with:
          args: --print-deps --json > dependency-graph.json

      - name: Upload Vulnerability Report
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-report
          path: |
            dependency-graph.json
            snyk-*.json

  secret-scan:
    name: Secret Detection Scan
    runs-on: ubuntu-latest
    needs: dependency-scan

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@v1
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        with:
          args: --show-secrets --verbose

      - name: TruffleHog scan
        uses: trufflesecurity/trufflehog@v3
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: Generate Secret Scan Report
        run: |
          echo "Secret Scan Summary" > secret-scan-report.txt
          echo "===================" >> secret-scan-report.txt
          echo "GitGuardian Findings: ${{ steps.gitguardian.outputs.count }}" >> secret-scan-report.txt
          echo "TruffleHog Findings: ${{ steps.trufflehog.outputs.count }}" >> secret-scan-report.txt

      - name: Upload Secret Scan Results
        uses: actions/upload-artifact@v3
        with:
          name: secret-scan-report
          path: secret-scan-report.txt
        if: always()

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [codeql-analysis, dependency-scan, secret-scan]
    if: always()

    steps:
      - name: Download Analysis Results
        uses: actions/download-artifact@v3
        with:
          path: security-results

      - name: Aggregate Security Reports
        run: |
          echo "Security Scan Summary" > security-summary.md
          echo "====================" >> security-summary.md
          echo "## CodeQL Analysis" >> security-summary.md
          cat security-results/sarif-results/* >> security-summary.md
          echo "## Dependency Vulnerabilities" >> security-summary.md
          cat security-results/vulnerability-report/* >> security-summary.md
          echo "## Secret Detection" >> security-summary.md
          cat security-results/secret-scan-report/* >> security-summary.md

      - name: Upload Aggregated Report
        uses: actions/upload-artifact@v3
        with:
          name: security-summary
          path: security-summary.md
        if: always()

      - name: Check Security Status
        if: ${{ failure() }}
        run: |
          echo "::error::Security scan failed! Please review the security reports."
          exit 1