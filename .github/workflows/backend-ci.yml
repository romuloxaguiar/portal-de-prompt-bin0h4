name: Backend CI

on:
  push:
    branches: [main, develop]
    paths: ['src/backend/**']
  pull_request:
    branches: [main, develop]
    paths: ['src/backend/**']

env:
  NODE_VERSION: '20.x'
  WORKING_DIRECTORY: 'src/backend'

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: read

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('${{ env.WORKING_DIRECTORY }}/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci

  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('${{ env.WORKING_DIRECTORY }}/package-lock.json') }}

      - name: Run ESLint
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run lint

      - name: Check formatting
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run format:check

  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('${{ env.WORKING_DIRECTORY }}/package-lock.json') }}

      - name: Run tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run test:ci

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: ${{ env.WORKING_DIRECTORY }}/coverage
          retention-days: 14

  security:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('${{ env.WORKING_DIRECTORY }}/package-lock.json') }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          queries: security-extended

      - name: Run npm audit
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm audit

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"

  build:
    needs: [lint, test, security]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKING_DIRECTORY }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('${{ env.WORKING_DIRECTORY }}/package-lock.json') }}

      - name: Build TypeScript
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ${{ env.WORKING_DIRECTORY }}/dist
          retention-days: 14